package pages;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import dao.UserDaoImplem;
import pojos.Users;

/**
 * Servlet implementation class LoginServlet
 */
@WebServlet(urlPatterns = { "/validate", "/auth" }, loadOnStartup = 2)
public class LoginServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private UserDaoImplem userDao;

	/**
	 * @see Servlet#init()
	 */
	// cannot add sqlException in throws clause:
	// method does not alllow any new check execution
	public void init() throws ServletException {
		// dao instance
		try {
			userDao = new UserDaoImplem();
		} catch (Exception e) {
			// centralized exception handling in servlet
			// javax.ervlet.ServletException(String msg,throwable cause)
			throw new ServletException("error in init of" + getClass(), e);
		}
	}

	/**
	 * @see Servlet#destroy()
	 */
	public void destroy() {
		// dao cleanup
		try {
			userDao.cleanUp();
		} catch (Exception e) {
			// System.out.println("err in destroy of "+getClass()+"err"+e);
			throw new RuntimeException("error in destroy of" + getClass(), e);
		}
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		{
			// set response content type
			response.setContentType("text/html");

			// pw
			try (PrintWriter pw = response.getWriter()) {
				// read req data (req parameter) sent from client-->server
				// API of javax .servlet.ServletRequest:
				// public String getParamer(String name)
				String email = request.getParameter("em");
				String password = request.getParameter("pass");

				// servlet invokes daos method for authentication/validation
				Users user = userDao.getSelectedUsersDetails(email, password);

				// check outcome
				if (user == null)
					pw.print("<h5>Invalid login please <a href='login.html'>Retry</a></h5>");
				else {
					pw.print("<h5>Loging Successfull! </h5>");
					pw.print("<h5>Your details" + user + "</h5>");

					// How to redirect the clnt from one servelt to another ?
					// Method of javax.servlet.http.HttpServletResponse
					// : public void sendRedirect(String location) throws IOExc
					response.sendRedirect("topics");
				}

			} catch (Exception e) {
				//
				throw new ServletException("err in do-post of" + getClass(), e);
			}
		}

	}
}



============================================================================
==
package dao;

import static utils.DBUtils.getConnection;
import pojos.Users;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import pojos.Users;

public class UserDaoImplem implements IUserDao {

	// state
	private Connection cn;
	private PreparedStatement pst1, pst2;

	// ctor
	public UserDaoImplem() throws SQLException {
		cn = getConnection();
		// pst1 :
		pst1 = cn.prepareStatement("select * from users where email=? and password= ? ");
		pst2 = cn.prepareStatement("UPDATE users SET password=? where email=? and password=?");
		System.out.println("user dao created...");
	}

	public Users getSelectedUsersDetails(String email, String password) throws SQLException {

		Users user = null;

		// set IN params
		pst1.setString(1, email);
		pst1.setString(2, password);

		// exec query
		try(ResultSet rst=pst1.executeQuery())
		{
			if(rst.next())
				//userId, String name, String email, String password, double regAmount, Date regDate, String role
				return new Users(rst.getInt(1), rst.getString(2), email, password, 
						rst.getDouble(5), rst.getDate(6), rst.getString(7));
		}
		return null;

	}

	public boolean changePassword(String email, String password, String newPassword) throws SQLException {
		Users user1 = null;

		// set IN params
		pst2.setString(1, newPassword);
		pst2.setString(2, email);
		pst2.setString(3, password);

		int n = pst2.executeUpdate();
		if (n > 0) {
			// System.out.println("Password updated!!.");
			return true;
		} else {
			// System.out.println(Oooopss Invalid Login!!");
			return false;
		}

	}

	public void cleanUp() throws SQLException {
		if (pst1 != null)
			pst1.close();
		if (pst2 != null)
			pst2.close();
		if (cn != null)
			cn.close();
		System.out.println("emp dao cleaned up....");
	}

	@Override
	public Users getUserDetails(String email, String password) throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

}

==================================
==============================
===================
=======4004040444==doPost


package pages;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import dao.TopicDaoImpl;
import dao.TutorialDaoImpl;
import dao.UserDaoImpl;
import pojos.User;
import utils.DBUtils;

/**
 * Servlet implementation class LoginServlet
 */
@WebServlet(urlPatterns = { "/validate", "/auth" }, loadOnStartup = 1)
public class LoginServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private UserDaoImpl userDao;
	private TopicDaoImpl topicDao;
	private TutorialDaoImpl tutDao;

	/**
	 * @see Servlet#init()
	 */
	// Can't add SqlException in the throws clause : since overrding form of the
	// method DOES NOT allow any NEW CHECKED excs.
	public void init() throws ServletException {
		// dao instance
		try {
			DBUtils.openConnection();
			userDao = new UserDaoImpl();
			topicDao=new TopicDaoImpl();
			tutDao=new TutorialDaoImpl();
		} catch (Exception e) {
			// centralized exc handling in servlets
			// javax.servlet.ServletException(String mesg,Throwable cause)
			throw new ServletException("err in init of " + getClass(), e);
		}
	}

	/**
	 * @see Servlet#destroy()
	 */
	public void destroy() {
		// dao's cleanup
		try {
			userDao.cleanUp();
			topicDao.cleanUp();
			tutDao.cleanUp();
			DBUtils.closeConnection();
		} catch (Exception e) {
			// System.out.println("err in destroy of "+getClass()+" err "+e);
			throw new RuntimeException("err in destroy of " + getClass(), e);
		}
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// set resp cont type
		response.setContentType("text/html");
		// pw
		try (PrintWriter pw = response.getWriter()) {
			// read request data (req parameters) sent ffrom clnt ---> server
			// API of javax.servlet.ServletRequest : public String getParameter(String name)
			String email = request.getParameter("em");
			String password = request.getParameter("pass");
			// Servlet invokes DAO's for authentication
			User user = userDao.authenticateUser(email, password);
			// chk the outcome
			if (user == null) // send retry link with err mesg
				pw.print("<h5> Invalid Login Please <a href='login.html'>Retry</a></h5>");
			else {
				// pw.print("<h5> Login Successful : mesg from LoginServlet </h5>");
				// in case of successful login , request WC to get HttpSession object.
				// API of HttpServletRequest : HttpSession getSession()
				HttpSession session = request.getSession();
				System.out.println("from login : session is new ? " + session.isNew());// true
				System.out.println("session id "+session.getId());
				System.out.println("session's imple class " + session.getClass());// catatlina jar
				// WC creates EMPTY session obj in WC's heap n creates a cookie
				// name : JSESSIONID value : string generated by WC / clnt eg : dgadf65765dhf
				/*
				 * 2. : How to save data in HttpSession?(scope=entire session) API of
				 * HttpSession i/f public void setAttribute(String attrName,Object attrVal)
				 * 
				 */
				session.setAttribute("user_details", user);
				//add dao instances under session scope
				session.setAttribute("user_dao", userDao);
				session.setAttribute("topic_dao", topicDao);
				session.setAttribute("tut_dao",tutDao);

				
				// role based authorization
				if (user.getRole().equals("ADMIN"))
					// How to redirect the clnt from one servelt to another ?
					// Method of javax.servlet.http.HttpServletResponse : public void
					// sendRedirect(String location) throws IOExc
					response.sendRedirect("admin");
				else
					response.sendRedirect("topics");// WC temp redirect resp : SC 302 | Location : topics, set-cookie :
													// cookie : JSESSIONID : gfdjg687466 | Body : EMPTY
				// clnt browser chks for privacy settings --cookies enabled --age =-1 => cookie
				// will be stored in the browser's cache.
				// clnt browser sends NEXT redirect request : method =GET , URL :
				// http://host:port/day5_cms/topics
				// req header : cookie : JSESSIONID : gfdjg687466
			}

		} catch (Exception e) {
			throw new ServletException("err in do-post of " + getClass(), e);
		}
	}

}
